#!/bin/bash


#lamp
alias a2='sudo service apache2'
alias vhosts='sudo mc /etc/apache2/'
alias debug="export XDEBUG_CONFIG='idekey=PHPSTORM remote_host=localhost';export SERVER_PORT=80;export SERVER_NAME=localhost;export REQUEST_URI=localhost"
alias undebug="unset XDEBUG_CONFIG;unset SERVER_PORT;unset SERVER_NAME;unset REQUEST_URI"

#symfony common (1, 2)
function sf-ver {
  if [ -f ./symfony ]
  then
      echo 1
  elif [ -f ./app/console ]
  then
      echo 2
  else
      echo 0
  fi
}

function s {
  if [ "$(sf-ver)" = '1' ]
  then
      ./symfony $*
  elif [ "$(sf-ver)" = '2' ]
  then
      ./app/console $*
  else
     echo "No symfony project found"
  fi
}


#symfony 1
alias 1.migrate='s doctrine:migrate'
alias 1.migrate.diff='s doctrine:generate-migrations-diff'
alias 1.migrate.empty='s doctrine:generate-migration'
alias 1.migrate.setversion='s doctrine:migration-version-set'
alias 1.build.classes='s doctrine:build --all-classes'
alias 1.data.load='s doctrine:data-load'
function 1.query {
  ./symfony doctrine:dql "$*"
}

function 1.build.all {
  s doctrine:build --all
  1.migrate.setversion
}

function 1.build.database {
  s doctrine:drop-db --no-confirmation
  s doctrine:build-db
  s doctrine:insert-sql
  1.migrate.setversion
}

function 1.build.load {
path=`pwd`
1.build.database
#if [ $? != 0 ] then exit $? fi

if [ $path == '/home/dziamid/dev/wizard' ]
  then
      1.data.load "data/local/fixtures.yml"
  elif [ $path == '/home/dziamid/dev/igivings' ]
      1.data.load "data/local/fixtures.yml"
  then
      1.data.load "data/local/fixtures"
      ./symfony app:member-data "data/local/members.csv" 1
#  else
##add other projects
  fi

}

#symfony 2
alias 2.gen.bundle='s generate:bundle'
alias 2.gen.entity='s doctrine:generate:entity'
alias 2.gen.crud='s doctrine:generate:crud'
alias 2.fixtures.load='s doctrine:fixtures:load'
alias 2.schema.dump='s doctrine:schema:update --dump-sql'
alias 2.schema.update='s doctrine:schema:update --force'

#2.query "select a from BGridBundle:Price\\Item a"
function 2.query {
  ./app/console doctrine:query:dql "$*" --hydrate="array"
}

#terminal
alias tarf='tar -cvzf'
alias untarf='tar -zxvf'
alias untar='tar -zxvf'
alias la='ls -alh --color=auto'
alias ll='ls -lh --color=auto'
alias cdln='cd -P'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
function take {
  mkdir $1
  cd $1
}

alias ea='nano ~/bin/dotfiles/bash/aliases && reload'
alias ee='nano ~/bin/dotfiles/bash/env'
alias ec='nano ~/bin/dotfiles/bash/config'

alias h='history'
alias reload='source ~/bin/dotfiles/bash/aliases'

#git
function g.br {
  br=`git branch | grep "*"`
  echo ${br/* /}
}

alias ga='git add -A .'
alias g='git status'
function gg {
  git commit -m "$*"
}
alias gga='git commit --amend'
alias gd='git diff'
alias gdc='git diff --cached'

alias g.c='git checkout'
alias g.cc='git checkout .'
alias g.r='git reset'
alias g.rb='git rebase'
alias g.f='git fetch'
alias g.p='git push'
alias g.a='git add'
alias g.cp='git cherry-pick'
alias g.cl='git clean -f'
alias g.m='git merge'
alias g.s='git stash'
alias g.sp='git stash pop'
alias g.l='git log'
alias g.b='git branch'
function g.ff {
  l=`g.br`
  u=`git config branch.$l.remote`
  
  c="git rebase $u/$l"
  echo "Executing $c"  
  $c
}


# d.da select m,i from LTDeliveryBundle:Menu m left join m.items i
# d.da select m,i from LTDeliveryBundle:Menu m join m.items i

alias print='rdesktop  -g 1300x800 -u d.zayankouski -d RICHBRAINS -p 123456789 -r disk:home=/home/dziamid -r clipboard:CLIPBOARD -r sound:off 10.10.1.9'

